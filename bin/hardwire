#!/usr/bin/env node

'use strict';

var ncp = require('ncp'),
	path = require('path');

var argv = require('minimist')(process.argv.slice(2));

var printHelp = function () {
	var helpText = '\n' +
		'Hardwire CLI\n' +
		'============\n\n' +
		'Usage: hardwire [options] [dir]\n\n' +
		'Options:\n\n' +
		'  -g <boilerplate>      generate boilerplate (basic or blog)\n' +
		'  -i <plugin>           install plugin (not ready)\n' +
		'  -h                    show this help' +
		'\n\n';
	console.log( helpText );
};

var generate = function (boilerplate, dir) {
	dir = dir || '.';
	dir = path.resolve( dir );
	if (typeof boilerplate === 'boolean') {
		console.log( 'Error: -b option needs boilerplate param');
		process.exit(1);
	} else if (boilerplate === 'basic') {
		ncp( path.resolve( __dirname, '../node_modules/hardwire-boilerplates/basic' ), dir, function (err) {
			if (err) {
				return console.error(err);
			}
 			console.log('Basic boilerplate installed!');
		});
	} else if (boilerplate === 'blog') {
		ncp( path.resolve( __dirname, '../node_modules/hardwire-boilerplates/blog' ), dir, function (err) {
			if (err) {
				return console.error(err);
			}
 			console.log('Blog boilerplate installed!');
		});
	} else {
		console.log( 'Bad boilerplate key' );
	}
};

var readOpts = function () {
	if (argv.h) { return printHelp();}
	if (argv.i) { console.log( '\nHardwire plugins are coming soon\n');}
	if (argv.g) {
		generate( argv.g, argv._[0] );
	}
	if (!argv.i && ! argv.g) {
		printHelp();
	}
};

readOpts();
